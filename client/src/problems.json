{
  "coding_problems": [
    {
      "problem_name": "Two Sum",
      "category": "Arrays"
    },
    {
      "problem_name": "Add Two Numbers",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Longest Substring Without Repeating Characters",
      "category": "Strings"
    },
    {
      "problem_name": "Median of Two Sorted Arrays",
      "category": "Arrays"
    },
    {
      "problem_name": "Valid Parentheses",
      "category": "Stacks"
    },
    {
      "problem_name": "Merge Intervals",
      "category": "Arrays"
    },
    {
      "problem_name": "Binary Tree Maximum Path Sum",
      "category": "Trees"
    },
    {
      "problem_name": "Serialize and Deserialize Binary Tree",
      "category": "Trees"
    },
    {
      "problem_name": "Container With Most Water",
      "category": "Arrays"
    },
    {
      "problem_name": "Longest Palindromic Substring",
      "category": "Strings"
    },
    {
      "problem_name": "Jump Game",
      "category": "Arrays"
    },
    {
      "problem_name": "Merge k Sorted Lists",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Minimum Window Substring",
      "category": "Strings"
    },
    {
      "problem_name": "Best Time to Buy and Sell Stock",
      "category": "Arrays"
    },
    {
      "problem_name": "Word Search",
      "category": "Arrays"
    },
    {
      "problem_name": "Reverse Linked List",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Valid Sudoku",
      "category": "Arrays"
    },
    {
      "problem_name": "Maximum Subarray",
      "category": "Arrays"
    },
    {
      "problem_name": "Palindrome Linked List",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Count and Say",
      "category": "Strings"
    },
    {
      "problem_name": "Longest Common Subsequence",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Implement Trie (Prefix Tree)",
      "category": "Trees"
    },
    {
      "problem_name": "Validate Binary Search Tree",
      "category": "Trees"
    },
    {
      "problem_name": "Search in Rotated Sorted Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Subarray Sum Equals K",
      "category": "Arrays"
    },
    {
      "problem_name": "Longest Increasing Subsequence",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Symmetric Tree",
      "category": "Trees"
    },
    {
      "problem_name": "Merge Sorted Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Find First and Last Position of Element in Sorted Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Longest Common Prefix",
      "category": "Strings"
    },
    {
      "problem_name": "Permutations",
      "category": "Arrays"
    },
    {
      "problem_name": "3Sum",
      "category": "Arrays"
    },
    {
      "problem_name": "Combination Sum",
      "category": "Arrays"
    },
    {
      "problem_name": "Generate Parentheses",
      "category": "Strings"
    },
    {
      "problem_name": "Substring with Concatenation of All Words",
      "category": "Strings"
    },
    {
      "problem_name": "Letter Combinations of a Phone Number",
      "category": "Strings"
    },
    {
      "problem_name": "Remove Nth Node From End of List",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Search Insert Position",
      "category": "Arrays"
    },
    {
      "problem_name": "Find All Anagrams in a String",
      "category": "Strings"
    },
    {
      "problem_name": "Next Permutation",
      "category": "Arrays"
    },
    {
      "problem_name": "Generate Random Point in a Circle",
      "category": "Math"
    },
    {
      "problem_name": "Binary Tree Inorder Traversal",
      "category": "Trees"
    },
    {
      "problem_name": "Unique Paths",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Validate IP Address",
      "category": "Strings"
    },
    {
      "problem_name": "Partition Equal Subset Sum",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Maximum Depth of Binary Tree",
      "category": "Trees"
    },
    {
      "problem_name": "Set Matrix Zeroes",
      "category": "Arrays"
    },
    {
      "problem_name": "Rotate Image",
      "category": "Arrays"
    },
    {
      "problem_name": "Merge Two Sorted Lists",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Count Primes",
      "category": "Math"
    },
    {
      "problem_name": "Group Anagrams",
      "category": "Strings"
    },
    {
      "problem_name": "Kth Smallest Element in a BST",
      "category": "Trees"
    },
    {
      "problem_name": "Minimum Path Sum",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Implement Stack using Queues",
      "category": "Stacks"
    },
    {
      "problem_name": "Find the Duplicate Number",
      "category": "Arrays"
    },
    {
      "problem_name": "Top K Frequent Elements",
      "category": "Arrays"
    },
    {
      "problem_name": "Find All Numbers Disappeared in an Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Insert Interval",
      "category": "Arrays"
    },
    {
      "problem_name": "Remove Duplicates from Sorted Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Largest Rectangle in Histogram",
      "category": "Arrays"
    },
    {
      "problem_name": "Longest Valid Parentheses",
      "category": "Strings"
    },
    {
      "problem_name": "Coin Change",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "First Missing Positive",
      "category": "Arrays"
    },
    {
      "problem_name": "Maximum Product Subarray",
      "category": "Arrays"
    },
    {
      "problem_name": "Decode String",
      "category": "Strings"
    },
    {
      "problem_name": "Single Number",
      "category": "Arrays"
    },
    {
      "problem_name": "Implement Queue using Stacks",
      "category": "Queues"
    },
    {
      "problem_name": "Longest Consecutive Sequence",
      "category": "Arrays"
    },
    {
      "problem_name": "Palindrome Number",
      "category": "Math"
    },
    {
      "problem_name": "Valid Anagram",
      "category": "Strings"
    },
    {
      "problem_name": "House Robber",
      "category": "Dynamic Programming"
    },
    {
      "problem_name": "Binary Tree Level Order Traversal",
      "category": "Trees"
    },
    {
      "problem_name": "Maximum Subarray",
      "category": "Arrays"
    },
    {
      "problem_name": "Binary Tree Zigzag Level Order Traversal",
      "category": "Trees"
    },
    {
      "problem_name": "Reverse Integer",
      "category": "Math"
    },
    {
      "problem_name": "Valid Perfect Square",
      "category": "Math"
    },
    {
      "problem_name": "Subsets",
      "category": "Arrays"
    },
    {
      "problem_name": "Unique Binary Search Trees",
      "category": "Trees"
    },
    {
      "problem_name": "Valid Sudoku",
      "category": "Arrays"
    },
    {
      "problem_name": "Find Minimum in Rotated Sorted Array",
      "category": "Arrays"
    },
    {
      "problem_name": "Construct Binary Tree from Preorder and Inorder Traversal",
      "category": "Trees"
    },
    {
      "problem_name": "Pow(x, n)",
      "category": "Math"
    },
    {
      "problem_name": "Reverse Bits",
      "category": "Bit Manipulation"
    },
    {
      "problem_name": "Search a 2D Matrix",
      "category": "Arrays"
    },
    {
      "problem_name": "Course Schedule",
      "category": "Graphs"
    },
    {
      "problem_name": "Minimum Size Subarray Sum",
      "category": "Arrays"
    },
    {
      "problem_name": "Valid Number",
      "category": "Math"
    },
    {
      "problem_name": "Combination Sum II",
      "category": "Arrays"
    },
    {
      "problem_name": "Implement strStr()",
      "category": "Strings"
    },
    {
      "problem_name": "Pow(x, n)",
      "category": "Math"
    },
    {
      "problem_name": "Majority Element",
      "category": "Arrays"
    },
    {
      "problem_name": "Path Sum",
      "category": "Trees"
    },
    {
      "problem_name": "Valid Palindrome",
      "category": "Strings"
    },
    {
      "problem_name": "Path Sum II",
      "category": "Trees"
    },
    {
      "problem_name": "Linked List Cycle",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Plus One",
      "category": "Arrays"
    },
    {
      "problem_name": "Intersection of Two Linked Lists",
      "category": "Linked Lists"
    },
    {
      "problem_name": "Search in a Binary Search Tree",
      "category": "Trees"
    },
    {
      "problem_name": "Sum of Two Integers",
      "category": "Bit Manipulation"
    },
    {
      "problem_name": "Best Time to Buy and Sell Stock II",
      "category": "Arrays"
    }
  ]
}
